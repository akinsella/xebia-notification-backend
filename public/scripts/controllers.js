// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var appModule, user;

  user = {
    firstName: "Alexis",
    lastName: "Kinsella",
    avatarUrl: "images/avatar_placeholder.png",
    fullName: "Alexis Kinsella",
    email: "alexis.kinsella@gmail.com"
  };

  /* Application Module*/


  appModule = angular.module('xebia-notification', []);

  /* Services*/


  appModule.factory('ErrorService', function() {
    return {
      errorMessage: null,
      setError: function(msg) {
        this.errorMessage = msg;
      },
      clear: function() {
        this.errorMessage = null;
      }
    };
  });

  appModule.config(function($httpProvider) {
    return $httpProvider.responseInterceptors.push('errorHttpInterceptor');
  });

  appModule.factory('errorHttpInterceptor', function($q, $location, ErrorService, $rootScope) {
    return function(promise) {
      return promise.then(function(response) {
        return response;
      }, function(response) {
        if (response.status === 401) {
          $rootScope.$broadcast('event:loginRequired');
        } else if (response.status >= 400 && response.status < 500) {
          ErrorService.setError('Server was unable to find  what you were looking for... Sorry!!');
        }
        return $q.reject(response);
      });
    };
  });

  appModule.factory('authHttp', function($http, Authentication) {
    var authHttp, extendHeaders;
    authHttp = {};
    extendHeaders = function(config) {
      config.headers = config.headers || {};
      return config.headers['Authorization'] = Authentication.getTokenType() + ' ' + Authentication.getAccessToken();
    };
    angular.forEach(['get', 'delete', 'head', 'jsonp'], function(name) {
      return authHttp[name] = function(url, config) {
        config = config || {};
        extendHeaders(config);
        return $http[name](url, config);
      };
    });
    angular.forEach(['post', 'put'], function(name) {
      return authHttp[name] = function(url, data, config) {
        config = config || {};
        extendHeaders(config);
        return $http[name](url, data, config);
      };
    });
    return authHttp;
  });

  /* Controllers*/


  appModule.controller('RootController', [
    '$scope', '$location', 'ErrorService', function($scope, $location, ErrorService) {
      $scope.errorService = ErrorService;
      return $scope.$on('event:loginRequired', function() {
        $location.path('/login');
      });
    }
  ]);

  appModule.controller('UserDetailsController', function($scope) {
    $scope.user = user;
    $scope.authenticated = true;
  });

  appModule.controller('SubMenuController', function($scope) {
    $scope.menus = [
      {
        message: 'Item 1',
        url: "item/1"
      }, {
        message: 'Item 2',
        url: "item/2"
      }, {
        message: 'Item 3',
        url: "item/3"
      }
    ];
  });

  appModule.controller('SidebarController', function($scope) {});

  appModule.controller('ContentController', function($scope) {
    $scope.sidebar = true;
  });

  appModule.controller('IndexController', function($scope) {
    $scope.title = "Home";
    $scope.user = user;
    $scope.authenticated = false;
  });

  /* Directives*/


  appModule.directive('alertBar', [
    '$parse', function($parse) {
      return {
        restrict: 'A',
        template: '<div class="alert alert-error alert-bar" ng-show="errorMessage">\n	<button type="button" class="close" ng-click="hideAlert()">x</button>\n	{{errorMessage}}\n</div>',
        link: function(scope, elem, attrs) {
          var alertMessageAttr;
          alertMessageAttr = attrs['alertmessage'];
          scope.errorMessage = null;
          scope.$watch(alertMessageAttr, function(newVal) {
            return scope.errorMessage = newVal;
          });
          return scope.hideAlert = function() {
            scope.errorMessage = null;
            return $parse(alertMessageAttr).assign(scope, null);
          };
        }
      };
    }
  ]);

}).call(this);
