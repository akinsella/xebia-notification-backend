// Generated by CoffeeScript 1.6.3
var User, apn, create, findById, list, me, removeById, utils, _;

utils = require('../lib/utils');

_ = require('underscore')._;

apn = require('apn');

User = require("../model/user");

create = function(req, res) {
  var user;
  user = new User(req.body);
  return user.save(function(err) {
    if (err) {
      utils.responseData(500, "Could not save user", req.body, {
        req: req,
        res: res
      });
    } else {
      utils.responseData(201, "Created", user, {
        req: req,
        res: res
      });
    }
  });
};

list = function(req, res) {
  return User.find({}, function(err, users) {
    utils.responseData(200, void 0, users, {
      req: req,
      res: res
    });
  });
};

findById = function(req, res) {
  return User.findOne({
    id: req.params.id
  }, function(err, user) {
    if (user) {
      utils.responseData(200, void 0, user, {
        req: req,
        res: res
      });
    } else {
      utils.responseData(404, "Not Found", void 0, {
        req: req,
        res: res
      });
    }
  });
};

removeById = function(req, res) {
  return User.findOneAndRemove({
    id: req.params.id
  }, function(err, user) {
    if (user) {
      utils.responseData(204, void 0, user, {
        req: req,
        res: res
      });
    } else {
      utils.responseData(404, "Not Found", void 0, {
        req: req,
        res: res
      });
    }
  });
};

me = function(req, res) {
  return res.json({
    user_id: req.user.id,
    name: req.user.name,
    scope: req.authInfo.scope
  });
};

module.exports = {
  create: create,
  list: list,
  findById: findById,
  create: create,
  removeById: removeById,
  me: me
};
